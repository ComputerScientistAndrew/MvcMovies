@model IEnumerable<MvcMovies.ViewModels.WatchlistViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Index";
}
@section Scripts {
    <script src="~/Scripts/toastr.js" type="text/javascript"></script>
    <script src="~/Scripts/script.js" type="text/javascript"></script>

}

<h2>Index</h2>
@if (Model != null)
{

    <div class="movieGrid">
        @Html.Grid(Model).Columns(columns =>
   {
       columns.Add().Encoded(false).Sanitized(false).RenderValueAs(c => "<img src=\"" + c.Image + "\" width='100' height'200'>");
       columns.Add(c => c.Title).Titled("Movie Title").Encoded(false).Sanitized(false).RenderValueAs(c => Html.ActionLink(c.Title, "Details", "Movies", new { id = c.MovieId }, null)).Sortable(true);
       columns.Add(c => c.Year).Format("{0:MM/dd/yyyy}").Titled("Release Date").Sortable(true);
       columns.Add(c => c.Genre).Titled("Genre").Sortable(true);
       columns.Add(c => c.Rated).Titled("Rated").Sortable(true).Css("text-center");
       columns.Add(c => c.Rating).Titled("IMDb Score").Sortable(true).Css("text-center");
       columns.Add(c => c.Added).Titled("Added").Sortable(true);
       columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
       .RenderValueAs(c => "<button onclick=\"GetMovieDetails('" + c.MovieId + "')\" " +
       "class='btn watchBtn'><img src=\"" + Url.Content("~/Content/Images/magnifyingglass.png") +
       "\" width='40'></button>");
       columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
       .RenderValueAs(c => "<button id=\"" + c.MovieId + "\" value='True' class='removeBtn btn'>Remove</button>");

   }).WithPaging(10).EmptyText("Your watchlist is empty.")
    </div>
    <div class="popupcntr" id="movieInfo_content" style="display: none;" title="Movie Information">
        <div class="innerBox">
            <div id="MovieDetails"></div>
        </div>
    </div>
}




