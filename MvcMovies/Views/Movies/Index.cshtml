@model IEnumerable<MvcMovies.ViewModels.MovieViewModel>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

@section Scripts {
    <script src="~/Scripts/script.js" type="text/javascript"></script>
}

<h2>Index</h2>

<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Create New", "Create")
    }

    @using (Html.BeginForm("Index", "Movies", FormMethod.Get))
    {
    <p>
        Genre: @Html.DropDownList("movieGenre", "All")
        Title: @Html.TextBox("SearchString")
        <input type="submit" value="Filter" />
    </p>
    }
</p>

    <div class="movieGrid">
        @Html.Grid(Model).Columns(columns =>
   {
       columns.Add().Encoded(false).Sanitized(false).RenderValueAs(c => "<img src=\"" + c.Image + "\" width='100' height'200'>");
       columns.Add(c => c.Title).Titled("Movie Title").Encoded(false).Sanitized(false).RenderValueAs(c => Html.ActionLink(c.Title, "Details", "Movies", new { id = c.MovieId }, null)).Sortable(true);
       columns.Add(c => c.Year).Format("{0:MM/dd/yyyy}").Titled("Release Date").Sortable(true).SetWidth(150);
       columns.Add(c => c.Genre).Titled("Genre").Sortable(true);
       columns.Add(c => c.Rated).Titled("Rated").Sortable(true).Css("text-center");
       columns.Add(c => c.Rating).Titled("IMDb").Sortable(true).ThenSortByDescending(c => c.Rating).Css("ratingCol").Css("text-center");

       columns.Add().Encoded(false).Sanitized(false)
       .RenderValueAs(c => "<button onclick=\"GetMovieDetails('" + c.MovieId + "')\" " +
       "class='btn watchBtn'><img src=\"" + Url.Content("~/Content/Images/magnifyingglass.png") +
       "\" width='40'></button>");

       columns.Add().Encoded(false).Sanitized(false).SetWidth(250)
       .Css("watchColumn").RenderValueAs(c => "<button id=\"" + c.MovieId + "\" value=\"" +
       (c.InWatchlist ? "True" : "False") + "\" class='addRemoveBtn btn watchBtn' " +
       "style='width: fit-content'>" + (c.InWatchlist ? "Remove from Watchlist" : "Add to Watchlist") +
       "</button>");

       if (User.IsInRole("Admin"))
       {
           columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
           .RenderValueAs(c => Html.ActionLink("Edit", "Edit", new { id = c.MovieId }));
           columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
           .RenderValueAs(c => Html.ActionLink("Delete", "Delete", new { id = c.MovieId }));
       }

   }).WithPaging(10).Sortable(true)
    </div>
    <div class="popupcntr" id="movieInfo_content" style="display: none;" title="Movie Information">
        <div class="innerBox">
            <div id="MovieDetails"></div>
        </div>
    </div>
    <div id="divProcessing">
        <p>Processing, please wait . . . <img src="/Content/Images/ajax-loader.gif"></p>
    </div>
